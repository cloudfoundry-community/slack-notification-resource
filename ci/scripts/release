#!/bin/bash
#
# ci/scripts/release
#
# Script for generating Github release / tag assets
# and managing release notes for a Docker Image pipeline
#
# author:  James Hunt <james@niftylogic.com>
#          Dennis Bell <dennis.j.bell@gmail.com>
# created: 2016-03-04

set -eu

: ${REPO_ROOT:?required}
: ${RELEASE_ROOT:?required}
: ${RELEASE_NAME:?required}
: ${GIT_EMAIL:?required}
: ${GIT_NAME:?required}
RELEASE_BRANCH=${RELEASE_BRANCH:-"master"}
: ${REPO_OUT:?required}

if [[ ! -f ${REPO_ROOT}/ci/release_notes.md ]]; then
  echo >&2 "ci/release_notes.md not found.  Did you forget to write them?"
  exit 1
fi

if [[ -z ${VERSION_FROM} ]]; then
  echo >&2 "VERSION_FROM environment variable not set, or empty.  Did you misconfigure Concourse?"
  exit 2
fi
if [[ ! -f ${VERSION_FROM} ]]; then
  echo >&2 "Version file (${VERSION_FROM}) not found.  Did you misconfigure Concourse?"
  exit 2
fi
VERSION=$(cat ${VERSION_FROM})
if [[ -z ${VERSION} ]]; then
  echo >&2 "Version file (${VERSION_FROM}) was empty.  Did you misconfigure Concourse?"
  exit 2
fi

echo "v${VERSION}"                  > ${RELEASE_ROOT}/tag
echo "${RELEASE_NAME} v${VERSION}"  > ${RELEASE_ROOT}/name
mv ${REPO_ROOT}/ci/release_notes.md   ${RELEASE_ROOT}/notes.md

# GIT!
if [[ -z $(git config --global user.email) ]]; then
  git config --global user.email "${GIT_EMAIL}"
fi
if [[ -z $(git config --global user.name) ]]; then
  git config --global user.name "${GIT_NAME}"
fi

(cd ${REPO_ROOT}
 git merge --no-edit "${RELEASE_BRANCH}"
 git add -A
 git status
 git commit -m "release v${VERSION} [skip ci]")

# so that future steps in the pipeline can push our changes
cp -a ${REPO_ROOT} ${REPO_OUT}

sed -e '/START_OF_DOCKERHUB_STRIP/,/END_OF_DOCKERHUB_STRIP/d' \
  git/README.md \
  > dockerhub/README.md
